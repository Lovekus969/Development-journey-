Async and await 
 What is an async function?
An async function is a function that always returns a Promise.

Inside an async function, you can use the await keyword to pause until a Promise settles (resolves or rejects).

This makes asynchronous code look more like synchronous code.


What is await?
await is a keyword used inside async functions to pause execution until a Promise is settled (resolved or rejected).
While it “pauses” your function, it doesn’t block the whole program — other code can still run in the background.

Function of await in an async workflow
Improves readability by avoiding .then() and .catch() chains.Maintains logical order for dependent async operations.Allows sequential or parallel async handling depending on use.

Q. What .then() is?

======>>>   .then() is a method available on Promise objects. It registers callback functions to be executed after the Promise settles (resolves or rejects).It returns a new Promise, which allows chaining


ooooooooooooo-----> handle the error so that if the random number check fails, the rest of your await functions can still run without the whole program crashing.
